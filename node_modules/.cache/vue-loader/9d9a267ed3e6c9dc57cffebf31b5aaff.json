{"remainingRequest":"/Users/maddyford/Desktop/ls-video-player/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maddyford/Desktop/ls-video-player/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maddyford/Desktop/ls-video-player/src/App.vue","mtime":1584932752882},{"path":"/Users/maddyford/Desktop/ls-video-player/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maddyford/Desktop/ls-video-player/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maddyford/Desktop/ls-video-player/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maddyford/Desktop/ls-video-player/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBMaXN0IGZyb20gJy4vY29tcG9uZW50cy9MaXN0LnZ1ZSc7CmltcG9ydCBWaWRlb1BsYXllciBmcm9tICcuL2NvbXBvbmVudHMvVmlkZW9QbGF5ZXIudnVlJzsKaW1wb3J0IHsgc3RvcmUgfSBmcm9tICIuL3N0b3JlLmpzIjsKCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ0FwcCcsCiAgY29tcG9uZW50czogewogICAgTGlzdCwKICAgIFZpZGVvUGxheWVyLAogIH0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGl0ZW1zOiBbXSwKICAgICAgc2VsZWN0ZWRWaWRlbzogc3RvcmUuc3RhdGUuc2VsZWN0ZWRWaWRlbywKICAgICAgc2VsZWN0ZWRWaWRlb0hUTUw6IHN0b3JlLnN0YXRlLnNlbGVjdGVkVmlkZW8uY29udGVudAogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gKCkgewogICAgZmV0Y2goJ2RhdGEuanNvbicpCiAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKICAgIH0pCiAgICAudGhlbigoZGF0YSkgPT4gewogICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgY29uc29sZS5sb2coJ3N0b3JlJywgc3RvcmUpOwogICAgICB0aGlzLml0ZW1zID0gZGF0YTsKICAgIH0pOwogIH0sCn0KCg=="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"container\">\n    <VideoPlayer :selectedVideoHTML=\"selectedVideoHTML\" :items=\"items\" class=\"videoPlayer\" />\n    <List :items=\"items\" class=\"list\" />\n  </div>\n</template>\n\n<script>\nimport List from './components/List.vue';\nimport VideoPlayer from './components/VideoPlayer.vue';\nimport { store } from \"./store.js\";\n\n\nexport default {\n  name: 'App',\n  components: {\n    List,\n    VideoPlayer,\n  },\n  data() {\n    return {\n      items: [],\n      selectedVideo: store.state.selectedVideo,\n      selectedVideoHTML: store.state.selectedVideo.content\n    }\n  },\n  mounted: function () {\n    fetch('data.json')\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      console.log(data);\n      console.log('store', store);\n      this.items = data;\n    });\n  },\n}\n\n</script>\n\n<style>\n.container {\n  display: grid;\n  grid-template-columns: 3fr 1fr;\n  grid-template-rows: auto;\n}\n\n\n</style>\n"]}]}